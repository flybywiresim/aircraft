<!-- Copyright (c) 2022 FlyByWire Simulations -->
<!-- SPDX-License-Identifier: GPL-3.0 -->

<ModelBehaviors>
    <Template Name="FBW_Airbus_FIRE_TEST_LIGHTS">
        <UseTemplate Name="FBW_Push_Toggle">
            <DUMMY_BUTTON>True</DUMMY_BUTTON>
            <SEQ1_CODE>(L:A32NX_FIRE_TEST_#TYPE##ID#, Bool)</SEQ1_CODE>
            <SEQ2_CODE>(L:A32NX_FIRE_TEST_#TYPE##ID#, Bool)</SEQ2_CODE>
        </UseTemplate>
    </Template>

    <Template Name="FBW_Airbus_FIRE_TEST_BUTTON">
        <UseTemplate Name="FBW_Push_Held">
            <HOLD_SIMVAR>L:A32NX_FIRE_TEST_#TYPE##ID#</HOLD_SIMVAR>
            <WWISE_EVENT_1>firetestbutton</WWISE_EVENT_1>
            <WWISE_EVENT_2>firetestbutton</WWISE_EVENT_2>
        </UseTemplate>
    </Template>

    <Template Name="FBW_Airbus_CARGOSMOKE_TEST_BUTTON">
        <UseTemplate Name="FBW_Push_Held">
            <HOLD_SIMVAR>L:A32NX_FIRE_TEST_#TYPE##ID#</HOLD_SIMVAR>
            <WWISE_EVENT_1>roundbutton</WWISE_EVENT_1>
            <WWISE_EVENT_2>roundbutton</WWISE_EVENT_2>
        </UseTemplate>
    </Template>

    <Template Name="FBW_Airbus_FIRE_AGENT">
        <UseTemplate Name="FBW_Push_Toggle">
            <SEQ1_CODE>(L:A32NX_FIRE_TEST_#TYPE##ID#, Bool) (L:A32NX_FIRE_BUTTON_#TYPE##ID#, Bool) or</SEQ1_CODE>
            <SEQ2_CODE>(L:A32NX_FIRE_TEST_#TYPE##ID#, Bool) (L:A32NX_FIRE_#TYPE##ID#_AGENT#AGENT_ID#_Discharge) or</SEQ2_CODE>
            <LEFT_SINGLE_CODE>
                (L:A32NX_FIRE_BUTTON_#TYPE##ID#, Bool) if{
                1 (>L:A32NX_FIRE_#TYPE##ID#_AGENT#AGENT_ID#_Discharge)
                }
            </LEFT_SINGLE_CODE>

            <MOMENTARY/>
        </UseTemplate>
    </Template>

    <Template Name="FBW_Airbus_FIRE_BUTTON">
        <DefaultTemplateParameters>
            <NODE_ID>#NODE_ID#</NODE_ID>
            <ANIM_NAME>#NODE_ID#</ANIM_NAME>
            <CURSOR>Grab</CURSOR>
            <ANIM_LENGTH>100</ANIM_LENGTH>
            <LEFT_LEAVE_CODE/>
            <LEFT_SINGLE_CODE/>
            <ANIM_DURATION>0.3</ANIM_DURATION>
            <TOGGLE_VAR>L:A32NX_FIRE_BUTTON_#TYPE##ID#</TOGGLE_VAR>
            <SEQ1_POWERED>1</SEQ1_POWERED>
            <SEQ2_POWERED>0</SEQ2_POWERED>
            <SEQ3_POWERED>0</SEQ3_POWERED>
            <ON_FIRE>(A:ENG ON FIRE:#ID#, Bool) 1 ==</ON_FIRE>
        </DefaultTemplateParameters>
        <Component ID="#NODE_ID#" Node="#NODE_ID#">

            <Update Frequency = "10">
                (#TOGGLE_VAR#)
                if{
                (O:_ButtonAnimVar) 0.1 #ANIM_DURATION# / + 1 min (&gt;O:_ButtonAnimVar)
                } els{
                (O:_ButtonAnimVar) 0.1 #ANIM_DURATION# / - (#TOGGLE_VAR#) max (&gt;O:_ButtonAnimVar)
                }
            </Update>

            <UseTemplate Name = "ASOBO_GT_Anim_Code">
                <Condition Check="OVERRIDE_ANIM_CODE">
                    <True>
                        <ANIM_CODE>#OVERRIDE_ANIM_CODE#</ANIM_CODE>
                    </True>
                    <False>
                        <ANIM_CODE>#ANIM_LENGTH# (O:_ButtonAnimVar) *</ANIM_CODE>
                    </False>
                </Condition>
            </UseTemplate>

            <UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
                <NODE_ID>#NODE_ID#_SEQ1</NODE_ID>
                <EMISSIVE_CODE>(L:A32NX_FIRE_TEST_#TYPE##ID#, Bool) #ON_FIRE# or (L:A32NX_OVHD_INTLT_ANN) 0 == (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and or #SEQ1_POWERED# and</EMISSIVE_CODE>
                <EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
            </UseTemplate>

            <UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
                <NODE_ID>#NODE_ID#_SEQ2</NODE_ID>
                <EMISSIVE_CODE>(L:A32NX_FIRE_TEST_#TYPE##ID#, Bool) #ON_FIRE# or (L:A32NX_OVHD_INTLT_ANN) 0 == (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and or #SEQ2_POWERED# and</EMISSIVE_CODE>
                <EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
            </UseTemplate>

            <UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
                <NODE_ID>#NODE_ID#_SEQ3</NODE_ID>
                <EMISSIVE_CODE>(L:A32NX_FIRE_TEST_#TYPE##ID#, Bool) #ON_FIRE# or (L:A32NX_OVHD_INTLT_ANN) 0 == (L:A32NX_ELEC_DC_2_BUS_IS_POWERED, Bool) and or #SEQ3_POWERED# and</EMISSIVE_CODE>
                <EMISSIVE_DRIVES_VISIBILITY>True</EMISSIVE_DRIVES_VISIBILITY>
            </UseTemplate>

            <UseTemplate Name = "ASOBO_GT_Interaction_LeftSingle_Leave_Code">
                <LEFT_SINGLE_CODE>
                    (L:A32NX_FIRE_GUARD_#TYPE##ID#) 1 == if{
                        (#TOGGLE_VAR#) ! (&gt;#TOGGLE_VAR#)
                    }
                </LEFT_SINGLE_CODE>
                <LEFT_LEAVE_CODE />
            </UseTemplate>

            <UseTemplate Name="ASOBO_GT_AnimTriggers_SoundEvent">
                <ANIM_NAME>#NODE_ID#</ANIM_NAME>
                <WWISE_EVENT>firepb</WWISE_EVENT>
            </UseTemplate>
        </Component>
    </Template>

    <Template Name="FBW_Airbus_FIRE_GUARD">
        <DefaultTemplateParameters>
            <NODE_ID>#NODE_ID#</NODE_ID>
            <ANIM_NAME>#NODE_ID#</ANIM_NAME>
            <CURSOR>Grab</CURSOR>

            <ANIM_LENGTH>100</ANIM_LENGTH>
            <LEFT_SINGLE_CODE/>
            <LEFT_LEAVE_CODE/>
            <ANIM_DURATION>0.3</ANIM_DURATION>

            <TOGGLE_VAR>L:A32NX_FIRE_GUARD_#TYPE##ID#</TOGGLE_VAR>
        </DefaultTemplateParameters>
        <Component ID="#NODE_ID#_MOUSE" Node="#NODE_ID#_MOUSE">

            <Update Frequency = "10">
                (#TOGGLE_VAR#) if{
                    (O:_ButtonAnimVar) 0.1 #ANIM_DURATION# / + 1 min (&gt;O:_ButtonAnimVar)
                } els{
                    (O:_ButtonAnimVar) 0.1 #ANIM_DURATION# / - (#TOGGLE_VAR#) max (&gt;O:_ButtonAnimVar)
                }
            </Update>

            <UseTemplate Name = "ASOBO_GT_Anim_Code">
                <NODE_ID>#NODE_ID#</NODE_ID>
                <ANIM_NAME>#NODE_ID#</ANIM_NAME>
                <Condition Check="OVERRIDE_ANIM_CODE">
                    <True>
                        <ANIM_CODE>#OVERRIDE_ANIM_CODE#</ANIM_CODE>
                    </True>
                    <False>
                        <ANIM_CODE>#ANIM_LENGTH# (O:_ButtonAnimVar) *</ANIM_CODE>
                    </False>
                </Condition>
            </UseTemplate>

            <UseTemplate Name = "ASOBO_GT_Anim_Code">
                <NODE_ID>#NODE_ID#_MOUSE</NODE_ID>
                <ANIM_NAME>#NODE_ID#_MOUSE</ANIM_NAME>
                <Condition Check="OVERRIDE_ANIM_CODE">
                    <True>
                        <ANIM_CODE>#OVERRIDE_ANIM_CODE#</ANIM_CODE>
                    </True>
                    <False>
                        <ANIM_CODE>#ANIM_LENGTH# (O:_ButtonAnimVar) *</ANIM_CODE>
                    </False>
                </Condition>
            </UseTemplate>

            <UseTemplate Name = "ASOBO_GT_Interaction_LeftSingle_Leave_Code">
                <NODE_ID>#NODE_ID#_MOUSE</NODE_ID>
                <ANIM_NAME>#NODE_ID#_MOUSE</ANIM_NAME>
                <LEFT_SINGLE_CODE>
                    (L:A32NX_FIRE_BUTTON_#TYPE##ID#) 0 == if{
                        (#TOGGLE_VAR#) ! (&gt;#TOGGLE_VAR#)
                    } #LEFT_SINGLE_CODE#
                </LEFT_SINGLE_CODE>
                <LEFT_LEAVE_CODE />
                <HIGHLIGHT_NODE_ID>#NODE_ID#</HIGHLIGHT_NODE_ID>
            </UseTemplate>

            <UseTemplate Name="ASOBO_GT_AnimTriggers_SoundEvent">
                <ANIM_NAME>#NODE_ID#</ANIM_NAME>
                <WWISE_EVENT>firepbguard</WWISE_EVENT>
            </UseTemplate>
        </Component>
    </Template>
</ModelBehaviors>
