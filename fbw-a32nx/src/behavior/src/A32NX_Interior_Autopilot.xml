<!-- Copyright (c) 2022 FlyByWire Simulations -->
<!-- SPDX-License-Identifier: GPL-3.0 -->

<ModelBehaviors>

    <!--
    Template for the AP1/AP2 master button on the FCU.

    Should probably be replaced by a generic template at some point.
    -->
    <Template Name="FBW_Airbus_Autopilot_Master">
        <DefaultTemplateParameters>
            <DEFAULT_NAME>Autopilot</DEFAULT_NAME>
            <HELPID>HELPID_AUTOPILOT_MASTER</HELPID>
            <TOOLTIPID>%((L:A32NX_AUTOPILOT_#ID#_ACTIVE, bool))%{if}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_AP_ON%{else}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_AP_OFF%{end}</TOOLTIPID>
            <AP_COUNT>1</AP_COUNT>
            <ID>1</ID>
            <ON_AP_MASTER_SWITCH></ON_AP_MASTER_SWITCH>
            <SEQ1_POWERED>1</SEQ1_POWERED>
            <SEQ2_POWERED>1</SEQ2_POWERED>
        </DefaultTemplateParameters>
        <UseTemplate Name="FBW_AUTOPILOT_Push_Template">
            <LEFT_SINGLE_CODE>'A32NX.FCU_AP_#ID#_PUSH' (&gt;F:KeyEvent)</LEFT_SINGLE_CODE>
            <EMISSIVE_CODE_ACTIVE>(L:A32NX_FCU_AP_#ID#_LIGHT_ON, Bool)</EMISSIVE_CODE_ACTIVE>
        </UseTemplate>
    </Template>

    <!--
    Template for the ATHR button on the FCU.

    Should probably be replaced by a generic template at some point.
    -->
    <Template Name="FBW_Airbus_Autopilot_Push_Autothrust">
        <DefaultTemplateParameters>
            <DEFAULT_NAME>Autothrust</DEFAULT_NAME>
            <TOOLTIPID>%((L:A32NX_AUTOTHRUST_STATUS, enum) 0 &gt;)%{if}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_AUTOTHROTTLE_ARMED%{else}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_AUTOTHROTTLE_OFF%{end}</TOOLTIPID>
        </DefaultTemplateParameters>
        <UseTemplate Name="FBW_AUTOPILOT_Push_Template">
            <LEFT_SINGLE_CODE>'A32NX.FCU_ATHR_PUSH' (&gt;F:KeyEvent)</LEFT_SINGLE_CODE>
            <EMISSIVE_CODE_ACTIVE>(L:A32NX_FCU_ATHR_LIGHT_ON, Bool)</EMISSIVE_CODE_ACTIVE>
        </UseTemplate>
    </Template>

    <!--
    Template for the LOC button on the FCU.

    Should probably be replaced by a generic template at some point.
    -->
    <Template Name="FBW_Airbus_Autopilot_Push_Localiser">
        <DefaultTemplateParameters>
            <DEFAULT_NAME>Localizer</DEFAULT_NAME>
            <HELPID>HELPID_AUTOPILOT_NAV_HOLD</HELPID>
            <TOOLTIPID>%((L:#PLANE_NAME#_AUTOPILOT_LOC_MODE, bool))%{if}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_LOC_ON%{else}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_LOC_OFF%{end}</TOOLTIPID>
            <SEQ1_POWERED>1</SEQ1_POWERED>
            <SEQ2_POWERED>1</SEQ2_POWERED>
        </DefaultTemplateParameters>

        <UseTemplate Name="FBW_AUTOPILOT_Push_Template">
            <LEFT_SINGLE_CODE>'A32NX.FCU_LOC_PUSH' (&gt;F:KeyEvent)</LEFT_SINGLE_CODE>
            <EMISSIVE_CODE_ACTIVE>(L:A32NX_FCU_LOC_LIGHT_ON, bool)</EMISSIVE_CODE_ACTIVE>
        </UseTemplate>
    </Template>

    <!--
    Template for the APPR button on the FCU.

    Should probably be replaced by a generic template at some point.
    -->
    <Template Name="FBW_Airbus_Autopilot_Push_Approach">
        <DefaultTemplateParameters>
            <DEFAULT_NAME>Approach</DEFAULT_NAME>
            <HELPID>HELPID_AUTOPILOT_APP_HOLD</HELPID>
            <TOOLTIPID>%((L:#PLANE_NAME#_AUTOPILOT_APPR_MODE, bool))%{if}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_APR_ON%{else}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_APR_OFF%{end}</TOOLTIPID>
            <SEQ1_POWERED>1</SEQ1_POWERED>
            <SEQ2_POWERED>1</SEQ2_POWERED>
        </DefaultTemplateParameters>

        <UseTemplate Name="FBW_AUTOPILOT_Push_Template">
            <LEFT_SINGLE_CODE>'A32NX.FCU_APPR_PUSH' (&gt;F:KeyEvent)</LEFT_SINGLE_CODE>
            <EMISSIVE_CODE_ACTIVE>(L:A32NX_FCU_APPR_LIGHT_ON, bool)</EMISSIVE_CODE_ACTIVE>
        </UseTemplate>
    </Template>

    <Template Name="FBW_AIRBUS_Push_Expedite_Template">
        <DefaultTemplateParameters>
            <DEFAULT_NAME>Expedite</DEFAULT_NAME>
            <PLANE_PREFIX></PLANE_PREFIX>
            <TOOLTIPID>Expedite</TOOLTIPID>
            <SEQ1_POWERED>1</SEQ1_POWERED>
            <SEQ2_POWERED>1</SEQ2_POWERED>
        </DefaultTemplateParameters>
        <UseTemplate Name="FBW_AUTOPILOT_Push_Template">
            <LEFT_SINGLE_CODE>'A32NX.FCU_EXPED_PUSH' (&gt;F:KeyEvent)</LEFT_SINGLE_CODE>
            <EMISSIVE_CODE_ACTIVE>(L:A32NX_FCU_EXPED_LIGHT_ON, bool)</EMISSIVE_CODE_ACTIVE>
        </UseTemplate>
    </Template>

    <Template Name="FBW_AUTOPILOT_Knob_SpeedMach_Template">
        <DefaultTemplateParameters>
            <ANIM_NAME>AUTOPILOT_Knob_SpeedMach</ANIM_NAME>
            <ANIM_NAME_PUSH>AUTOPILOT_Knob_SpeedMach_Push</ANIM_NAME_PUSH>
            <ANIM_NAME_PUSHPULL>AUTOPILOT_Knob_SpeedMach_Push</ANIM_NAME_PUSHPULL>
            <PART_ID>AUTOPILOT_Knob_SpeedMach</PART_ID>
            <NODE_ID>AUTOPILOT_Knob_SpeedMach</NODE_ID>
            <WWISE_EVENT>QNHknob</WWISE_EVENT>
            <COUNT>36</COUNT>
            <ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
            <ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
            <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_SPEED_DECREASE</ANIMTIP_0>
            <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_SPEED_INCREASE</ANIMTIP_1>
        </DefaultTemplateParameters>
        <EditableTemplateParameters>
            <AddParams>
                <ANIM_NAME></ANIM_NAME>
                <ANIM_NAME_PUSHPULL></ANIM_NAME_PUSHPULL>
            </AddParams>
        </EditableTemplateParameters>
        <Component ID="#NODE_ID#" Node="#NODE_ID#">
            <UseTemplate Name="ASOBO_GT_Knob_Infinite_PushPull">
                <ANIM_NAME_KNOB>#ANIM_NAME#</ANIM_NAME_KNOB>
                <ANTICLOCKWISE_CODE>
                    'A32NX.FCU_SPD_DEC' (&gt;F:KeyEvent)
                </ANTICLOCKWISE_CODE>
                <CLOCKWISE_CODE>
                    'A32NX.FCU_SPD_INC' (&gt;F:KeyEvent)
                </CLOCKWISE_CODE>
                <PULL_CODE>
                    'A32NX.FCU_SPD_PULL' (&gt;F:KeyEvent)
                </PULL_CODE>
                <PUSH_CODE>
                    'A32NX.FCU_SPD_PUSH' (&gt;F:KeyEvent)
                </PUSH_CODE>
                <WWISE_EVENT_1>QNHknob</WWISE_EVENT_1>
                <WWISE_EVENT_2>QNHknob</WWISE_EVENT_2>
                <!--<ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
                <ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR> -->
                <ANIMTIP_2_ON_CURSOR>UpArrow</ANIMTIP_2_ON_CURSOR>
                <ANIMTIP_3_ON_CURSOR>DownArrow</ANIMTIP_3_ON_CURSOR>
                <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_SPEED_DECREASE</ANIMTIP_0>
                <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_SPEED_INCREASE</ANIMTIP_1>
                <ANIMTIP_2>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_SPEED_ENGAGE_MANAGE_MODE</ANIMTIP_2>
                <ANIMTIP_3>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_SPEED_ENGAGE_SELECTED_AIRSPEED_MODE</ANIMTIP_3>
            </UseTemplate>
        </Component>
    </Template>

    <Template Name="FBW_AUTOPILOT_Push_SpeedToggle_Template">
        <DefaultTemplateParameters>
            <DEFAULT_NAME>SpeedToggle</DEFAULT_NAME>
        </DefaultTemplateParameters>
        <UseTemplate Name="FBW_AUTOPILOT_Push_Template">
            <LEFT_SINGLE_CODE>
                'A32NX.FCU_SPD_MACH_TOGGLE_PUSH' (&gt;F:KeyEvent)
            </LEFT_SINGLE_CODE>
            <EMISSIVE_CODE_ACTIVE>(A:AUTOPILOT MANAGED SPEED IN MACH, Bool)</EMISSIVE_CODE_ACTIVE>
            <TOOLTIPID>%((A:AUTOPILOT MANAGED SPEED IN MACH, Bool))%{if}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_SPD_MACH%{else}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_SPD_KNOT%{end}</TOOLTIPID>
        </UseTemplate>
    </Template>

    <Template Name="FBW_AutoThrottle_Instinctive_Disconnect_Template">
        <UseTemplate Name="FBW_Push_Held">
            <HOLD_SIMVAR>L:A32NX_AUTOTHRUST_DISCONNECT</HOLD_SIMVAR>
            <TOOLTIPID>Disc. A/THR</TOOLTIPID>
        </UseTemplate>
    </Template>

<Template Name="FBW_AUTOPILOT_Switch_Altitude_Increment_Template">
    <Parameters Type="Default">
        <DEFAULT_NAME>Altitude_Increment</DEFAULT_NAME>
        <NODE_ID>AUTOPILOT_Switch_Altitude_Increment</NODE_ID>
        <ANIM_NAME>AUTOPILOT_Switch_Altitude_Increment</ANIM_NAME>
        <PART_ID>AUTOPILOT_Switch_Altitude_Increment</PART_ID>
        <CURSOR>Animtip</CURSOR>
        <INIT>1</INIT>
        <INPUT_EVENT_ID_SOURCE>AUTOPILOT</INPUT_EVENT_ID_SOURCE>
    </Parameters>
    <Parameters Type="Override">
        <BTN_ID>Altitude_Increment</BTN_ID>
    </Parameters>
    <UseTemplate Name="ASOBO_GT_Update">
        <UPDATE_ONCE>True</UPDATE_ONCE>
        <UPDATE_CODE>#INIT# (&gt;L:A32NX_FCU_ALT_INCREMENT_1000)</UPDATE_CODE>
    </UseTemplate>
    <Component ID="#NODE_ID#" Node="#NODE_ID#">
        <UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
            <ANIM_CODE>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#, Bool) 100 *</ANIM_CODE>
            <NO_INDICATOR>True</NO_INDICATOR>
            <NO_TEXT_EMISSIVE>True</NO_TEXT_EMISSIVE>
            <TT_DESCRIPTION_ID>@TT_Package.AUTOPILOT_KNOB_ALTITUDE_INCREMENT_ACTION</TT_DESCRIPTION_ID>
            <TOOLTIP_TITLE>@TT_Package.AUTOPILOT_KNOB_ALTITUDE_INCREMENT_TITLE</TOOLTIP_TITLE>
            <GET_STATE_EXTERNAL>(L:A32NX_FCU_ALT_INCREMENT_1000) sp0</GET_STATE_EXTERNAL>
            <SIM_STATE_IS_ON_EXTERNAL>l0 1 ==</SIM_STATE_IS_ON_EXTERNAL>
            <SET_STATE_OFF>0 (&gt;L:A32NX_FCU_ALT_INCREMENT_1000)</SET_STATE_OFF>
            <SET_STATE_ON>1 (&gt;L:A32NX_FCU_ALT_INCREMENT_1000)</SET_STATE_ON>
            <STR_STATE_OFF>Hundred</STR_STATE_OFF>
            <STR_STATE_ON>Thousand</STR_STATE_ON>
            <TT_VALUE_OFF>'100'</TT_VALUE_OFF>
            <TT_VALUE_ON>'1000'</TT_VALUE_ON>
            <CHECK_STATE_HAS_CHANGED>False</CHECK_STATE_HAS_CHANGED>
            <LOCAL_VAR_TO_WATCH_0>A32NX_FCU_ALT_INCREMENT_1000</LOCAL_VAR_TO_WATCH_0>
            <WWISE_EVENT_1>lswitch</WWISE_EVENT_1>
            <WWISE_EVENT_2>lswitch</WWISE_EVENT_2>
        </UseTemplate>
        <UseTemplate Name="ASOBO_GT_Switch_Code">
            <ANIM_CODE>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#, Bool) 100 *</ANIM_CODE>
            <WWISE_EVENT_1>lswitch</WWISE_EVENT_1>
            <WWISE_EVENT_2>lswitch</WWISE_EVENT_2>
        </UseTemplate>
        <UseTemplate Name="ASOBO_LIGHTING_Potentiometer_Emissive_Template">
            <POTENTIOMETER>84</POTENTIOMETER>
            <DONT_OVERRIDE_BASE_EMISSIVE>True</DONT_OVERRIDE_BASE_EMISSIVE>
            <EMISSIVE_CODE>(L:A32NX_ELEC_AC_1_BUS_IS_POWERED, Bool)</EMISSIVE_CODE>
        </UseTemplate>
    </Component>
</Template>

</ModelBehaviors>
