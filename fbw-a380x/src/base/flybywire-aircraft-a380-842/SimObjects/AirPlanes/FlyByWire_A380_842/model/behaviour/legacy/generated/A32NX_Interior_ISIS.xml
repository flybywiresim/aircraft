<!-- Copyright (c) 2023-2024 FlyByWire Simulations -->
<!-- SPDX-License-Identifier: GPL-3.0 -->

<ModelBehaviors>
    <!-- Template for the rotatable, clickable barometric setting knob around the ISIS
    Main Parameters:
        - NODE_ID               <no default>    Switch node ID                          (anim name will be same)
        - ANIM_NAME             #NODE_ID#        The knob animation name
    -->
    <Template Name="FBW_ISIS_Knob_Template">
        <DefaultTemplateParameters>
            <ID>2</ID>
            <ANIM_NAME>#NODE_ID#</ANIM_NAME>
            <ANIMREF_ID>-1</ANIMREF_ID>
            <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_BARO_KNOB_INCREASE</ANIMTIP_0>
            <ANIMTIP_0_ON_CURSOR>TurnRight</ANIMTIP_0_ON_CURSOR>
            <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_BARO_KNOB_DECREASE</ANIMTIP_1>
            <ANIMTIP_1_ON_CURSOR>TurnLeft</ANIMTIP_1_ON_CURSOR>
            <ANIMTIP_2>TT:COCKPIT.TOOLTIPS.BARO_REF_SET_STD</ANIMTIP_2>
            <ANIMTIP_2_ON_CURSOR>DownArrow</ANIMTIP_2_ON_CURSOR>
            <ANIMTIP_3>TT:COCKPIT.TOOLTIPS.BARO_ENABLE_SELECTION</ANIMTIP_3>
            <ANIMTIP_3_ON_CURSOR>UpArrow</ANIMTIP_3_ON_CURSOR>
            <ANIMTIP_4>TT:COCKPIT.TOOLTIPS.BARO_REF_SET_STD</ANIMTIP_4>
            <ANIMTIP_4_ON_CURSOR>Hand</ANIMTIP_4_ON_CURSOR>
        </DefaultTemplateParameters>

        <UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
            <TEMPLATE_TO_CALL>FBW_ISIS_Knob_SubTemplate1</TEMPLATE_TO_CALL>
        </UseTemplate>
    </Template>

    <Template Name="FBW_ISIS_Knob_SubTemplate1">
        <Parameters Type="Default">
            <ALTIMETER_INDEX>#ID#</ALTIMETER_INDEX>
        </Parameters>
        <Parameters Type="Default">
            <NODE_ID>AUTOPILOT_Knob_Baro_#ID##SUFFIX_ID#</NODE_ID>
            <ANIM_NAME>AUTOPILOT_Knob_Baro_#ID##SUFFIX_ID#</ANIM_NAME>
            <PART_ID>AUTOPILOT_Knob_Baro</PART_ID>
            <ANIMREF_ID>-1</ANIMREF_ID>
            <ANIM_NAME_KNOB>#ANIM_NAME#</ANIM_NAME_KNOB>
            <ANIM_NAME_PUSH>AUTOPILOT_Knob_Baro_#ID#_push#SUFFIX_ID#</ANIM_NAME_PUSH>
            <MODE_QNH>0</MODE_QNH>
            <MODE_STD>1</MODE_STD>
            <!-- this can't be represented in RNP (yet...?), so we use this escape hatch -->
            <SET_QNH_CODE>
                #ALTIMETER_INDEX# (O:A32NX_ISIS_BARO_SAVED, number) (&gt;K:2:KOHLSMAN_SET)
            </SET_QNH_CODE>
            <SET_STD_CODE>
                #ALTIMETER_INDEX# 16211 (&gt;K:2:KOHLSMAN_SET)
            </SET_STD_CODE>
        </Parameters>
        <Component ID="#NODE_ID#" Node="#NODE_ID#">
            <UseTemplate Name="ASOBO_GT_Knob_Infinite_Push">
                <ANTICLOCKWISE_CONDITION>1</ANTICLOCKWISE_CONDITION>
                <ANTICLOCKWISE_CODE>
                    (L:A32NX_ISIS_BUGS_ACTIVE, enum) 1 == if{
                        0 (&gt;H:A32NX_ISIS_KNOB_ANTI_CLOCKWISE)
                    } els{
                        (L:A32NX_ISIS_BARO_MODE, enum) #MODE_STD# != if{
                            (L:A32NX_ISIS_BARO_UNIT_INHG, enum) if{
                                #ALTIMETER_INDEX# (&gt;K:KOHLSMAN_DEC)
                            } els{
                                #ALTIMETER_INDEX# (A:KOHLSMAN SETTING MB:#ALTIMETER_INDEX#, millibars) -- 16 * (&gt;K:2:KOHLSMAN_SET)
                            }
                        }
                    }
                </ANTICLOCKWISE_CODE>
                <CLOCKWISE_CONDITION>1</CLOCKWISE_CONDITION>
                <CLOCKWISE_CODE>
                    (L:A32NX_ISIS_BUGS_ACTIVE, enum) 1 == if{
                        0 (&gt;H:A32NX_ISIS_KNOB_CLOCKWISE)
                    } els{
                        (L:A32NX_ISIS_BARO_MODE, enum) #MODE_STD# != if{
                            (L:A32NX_ISIS_BARO_UNIT_INHG, enum) if{
                                #ALTIMETER_INDEX# (&gt;K:KOHLSMAN_INC)
                            } els{
                                #ALTIMETER_INDEX# (A:KOHLSMAN SETTING MB:#ALTIMETER_INDEX#, millibars) ++ 16 * (&gt;K:2:KOHLSMAN_SET)
                            }
                        }
                    }
                </CLOCKWISE_CODE>
                <LEFT_SINGLE_CODE type="rnp">
                    (L:A32NX_ISIS_BUGS_ACTIVE, bool) if{
                      0 (&gt;H:A32NX_ISIS_KNOB_PRESSED, number)
                    } els{
                      (L:A32NX_ISIS_BARO_MODE, enum) #MODE_QNH# == if{
                        #MODE_STD# (&gt;L:A32NX_ISIS_BARO_MODE, enum)
                        (A:KOHLSMAN SETTING MB:#ALTIMETER_INDEX#, bars) 16000 * (&gt;O:A32NX_ISIS_BARO_SAVED, number)
                        #SET_STD_CODE#
                      } els{
                        #MODE_QNH# (&gt;L:A32NX_ISIS_BARO_MODE, enum)
                        #SET_QNH_CODE#
                      }
                    }
                </LEFT_SINGLE_CODE>
                <WWISE_EVENT>rmpknob</WWISE_EVENT>
                <COUNT>36</COUNT>
                <WWISE_EVENT_1>mcdubuttons</WWISE_EVENT_1>
                <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
                <WWISE_EVENT_2>mcdubuttons</WWISE_EVENT_2>
                <NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
            </UseTemplate>
        </Component>
    </Template>

    <!--
    Template for the toggle buttons around the ISIS (LS and BUGS)
    Main Parameters:
        - NODE_ID               <no default>    Switch node ID                          (anim name will be same)
        - TOOLTIPID             <no default>    Tooltip to show
        - BTN_ID                <no default>    ID used to identify emitted event and toggled simvar
        - ONLY_SEQ1             Not present     Specifies if only sequence 1 emissive should be used
    -->
    <Template Name="A32NX_ISIS_Push_Template">
        <Component ID="#NODE_ID#" Node="#NODE_ID#">
            <UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
                <ANIM_NAME>#NODE_ID#</ANIM_NAME>
                <PART_ID>#NODE_ID#</PART_ID>
                <LEFT_SINGLE_CODE>
                    (&gt;H:A32NX_ISIS_#BTN_ID#_PRESSED)
                    (L:A32NX_ISIS_#BTN_ID#_ACTIVE) ! (&gt;L:A32NX_ISIS_#BTN_ID#_ACTIVE)
                </LEFT_SINGLE_CODE>
                <WWISE_EVENT_1>mcdubuttons</WWISE_EVENT_1>
                <WWISE_EVENT_2>mcdubuttons</WWISE_EVENT_2>
                <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
                <NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
                <TOOLTIPID>#TOOLTIPID#</TOOLTIPID>
            </UseTemplate>
        </Component>
    </Template>

    <!--
    Template for the buttons around the ISIS which can be held (+, -, and RST)
    Main Parameters:
        - NODE_ID               <no default>    Switch node ID                          (anim name will be same)
        - TOOLTIPID             <no default>    Tooltip to show
        - BTN_ID                <no default>    ID used to identify emitted event and toggled simvar
        - ONLY_SEQ1             Not present     Specifies if only sequence 1 emissive should be used
    -->
    <Template Name="A32NX_ISIS_Push_Held_Template">
        <Component ID="#NODE_ID#" Node="#NODE_ID#">
            <UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
                <ANIM_NAME>#NODE_ID#</ANIM_NAME>
                <PART_ID>#NODE_ID#</PART_ID>
                <LEFT_SINGLE_CODE>0 (&gt;H:A32NX_ISIS_#BTN_ID#_PRESSED)</LEFT_SINGLE_CODE>
                <LEFT_LEAVE_CODE>1 (&gt;H:A32NX_ISIS_#BTN_ID#_RELEASED)</LEFT_LEAVE_CODE>
                <WWISE_EVENT_1>mcdubuttons</WWISE_EVENT_1>
                <WWISE_EVENT_2>mcdubuttons</WWISE_EVENT_2>
                <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
                <NORMALIZED_TIME_2>0.3</NORMALIZED_TIME_2>
                <TOOLTIPID>#TOOLTIPID#</TOOLTIPID>
            </UseTemplate>
        </Component>
    </Template>

</ModelBehaviors>
